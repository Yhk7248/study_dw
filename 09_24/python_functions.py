"""

1. print 함수 :
####################################################################################################################
    타입에 관계 없이 내부에 입력으로 들어간 값을 console 에 출력합니다.
####################################################################################################################
     print("john")

2. range 함수 (for 문에서 사용)
####################################################################################################################
    기본 형태는 아래와 같이 사용합니다.
    기본적으로 start = 0, step = 1 을 사용합니다.
####################################################################################################################

    name_list = ["john", "maria", "tom"]
    start = 0
    end = len(name_list)
    step = 1

    for i in range(start, end, step):
        ...반복문 코드


3. 함수의 구성
####################################################################################################################
    1) 함수의 구성.
        1. def 키워드 (필수)
        2. function name (필수)
        3. parameter (필수 아님)
        4. return (필수 아님)
    2) 함수 내부의 변수 이름과 함수 외부의 변수 이름은 다른 메모리 주소에 할당 되기 때문에 이름이 같다고 해서 영향을 주지 않음.
    3) 함수에 전달되는 변수의 이름과 함수 내부에서 사용될 변수 이름은 달라도 됨.
####################################################################################################################

    함수 예시 ) 값 a, b를 정의하고, 더하는 함수를 구현.
        def add(x, y):      # def 함수명 (파라미터 2개)
            return x + y    # return 값

        if __name__ == "__main__":
            a = 1
            b = 2
            print(add(a,b))     # return 을 변수로 받지 않고, print 함수에 바로 전달.
"""
